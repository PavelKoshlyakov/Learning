package learn.java.core;

import java.util.Scanner;

public class LoopLesson {
    public static void main(String[] args) {

        Scanner scanner = new Scanner(System.in);

        //Цикл - конструкция, которая повторяет код, описанный в теле цикла
        //Тело цикла - код, которые должен повторяться некоторое количество раз (находится внутри фигурных скобок)

//=================================================== ЦИКЛ FOR ===============================================================
        //Цикл со счётчиком
        //Итерация - один круг (повтор) цикла

        //i - счётчик цикла. Может иметь любой название и начальное значение.
        //i < 5 - условие существования цикла. Пока условие верно, цикл будет совершать итерации. Проверяется ПЕРЕД КАЖДОЙ итерацией
        //i++ - изменение счётчика цикла (шаг) в КОНЦЕ каждой итерации. Изменение может быть любым, например: i = i + 2
//        for (int i = 0; i < 5; i++){ //i < 5 перед каждой итерацией, i++ после каждой итерации
//            System.out.println(i);      //Тело цикла
//        }
//        System.out.println(0);
//        System.out.println(1);
//        System.out.println(2);
//        System.out.println(3);
//        System.out.println(4);

        //Счётчик цикла может принимать любое начальное значение
//        for (int i = -5; i <= 5; i++){
//            System.out.print(i + " ");
//        }

        //Счётчик цикла может являться числом с плавающей точкой
//        for (double i = 0; i < 10; i = i + 0.5){
//            System.out.println(i);
//        }

        //Условие существования цикла может быть составным
//        boolean flag = false;
//        for (int i = 0; i < 10 && flag == false; i++) {
//            if (i == 5) {
//                flag = true;
//            }
//            System.out.println(i);
//        }

//        int number = scanner.nextInt();
//        for (int i = 0; i < 10 && number < 1000; i++) {
//            number += 50;
//        }
//        System.out.println(number);

        //Можно добавлять дополнительные счётчики цикла
//        for (int i = 0, j = 10; i < 5; i++, j++){
//            System.out.println(i + " " + j);
//        }

        //В качестве начального значения счётчика цикла или в качестве условия окончания цикла может использоваться переменная
        //соответствующего типа.
//        Scanner in = new Scanner(System.in);
//        System.out.println("Введите количество повторений:");
//        int repeat = in.nextInt();
//        for (int i = 0; i < repeat; i++){
//            System.out.print(i + " ");
//        }

        //Использование накопителя для вычисления суммы ряда чисел
//        int sum = 0;    //Накопитель. Может иметь любое название, но стартовое значение, как правило, равно нулю. Создаётся перед циклом, в котором он будет использоваться
//        for (int i = 0; i < 5; i++){
//            sum = sum + i;
//        }
//        System.out.println("Сумма равна " + sum);

//=================================================== ЦИКЛ WHILE ===============================================================
        //Цикл с предусловием
        //У данного цикла существует условие. Пока условие истинно, цикл совершает итерации

//        int number = scanner.nextInt();
//        while (number < 10){
//            System.out.println(number);
//            number++;
//        }
        //изменённый цикл, но с аналогичным назначением
//        while (number < 10){
//            System.out.println(number++);
//        }

//        int x = -1;
//        while (x != 0){
//            x = scanner.nextInt();
//        }

//=============================================== ОПЕРАТОРЫ УПРАВЛЕНИЯ ЦИКЛАМИ =========================================================
        // Операторы управления могут принудительно завершить работу цикла или заставить цикл пропустить итерацию
        // Если есть возожность обойтись без них, то лучше их не использовать. Операторы прерывания являются наследием от низкоуровневых
        //языков программирования и использование их в высокоуровневых языках - лишний повод усомниться в компетентности специалиста.
        //Однако, за разовое использование никто Вас ругать не будет.

        //break - принудительно завершает цикл, в котором он был вызван
//        for (int i = 0; i < 10; i++){
//            if (i == 5){
//                break;
//            }
//            System.out.println(i);
//        }

        //continue - пропускает текущую итерацию
//        for (int i = 0; i < 10; i++){
//            if (i == 3 || i == 6 || i == 8){
//                continue;
//            }
//            System.out.print(i + " ");
//        }
    }
}
